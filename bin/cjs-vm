#!/usr/bin/env node
"use strict";
const program = require('commander');
var lex = require('../src/lexico/scanner');
var lee = require('../src/lexico/lexico')
var pars = require('../src/sintactico/parser2');
const { parser } = require('stream-json');

var cmdValue;


program
	.command('run')
	.description('run setup commands for all envs')
	.option("-u, --ui", "para usar desde ide, lee el programa de stdio")
	.option("-f, --file <path>", "para leer el archivo <path>")
	.action(function (options) {
		if (options.ui) {
			lex.fromStream(process.stdin, continuar);

		} else if (options.file) {
			process.stdout.write(lex.fromFile(options.file).map((token) => {
				return `\n${token.value}`;
			}).toString());
		} else {

		}
	});

program
	.command('parse <path>')
	.alias('ex')
	.description('execute the given remote cmd')
	.option("-e, --exec_mode <mode>", "Which exec mode to use")
	.action(function (path, options) {
		console.log('parseando...')
		pars.parse(lex.fromFile(path));
	}).on('--help', function () {
		console.log('');
		console.log('Examples:');
		console.log('');
		console.log('  $ deploy exec sequential');
		console.log('  $ deploy exec async');
	});

program
	.command('*')
	.action(function (env) {
		console.log('deploying "%s"', env);
	});

function continuar(newTokens) {
	parser()
	process.stdout.write(`[${newTokens.map((token) => { return JSON.stringify(token); }).toString()}]`);
}

program.parse(process.argv);